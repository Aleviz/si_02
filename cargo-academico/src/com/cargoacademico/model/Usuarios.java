package com.cargoacademico.model;
// Generated 09-27-2019 01:09:44 PM by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Usuarios generated by hbm2java
 */
@Entity
@Table(name = "usuarios", catalog = "cargo_academico")
public class Usuarios implements java.io.Serializable {

	/**
	 * 
	 */
<<<<<<< HEAD
	private static final long serialVersionUID = 6759420681954017701L;
	private Integer idUsuario;
=======
	private static final long serialVersionUID = 1L;
	private int idUsuario;
>>>>>>> Geografico
	private Roles roles;
	private String username;
	private String pass;
	private Set<Empleado> empleados = new HashSet<Empleado>(0);

	public Usuarios() {
	}

	public Usuarios(int idUsuario, Roles roles) {
		this.idUsuario = idUsuario;
		this.roles = roles;
	}

	public Usuarios(int idUsuario, Roles roles, String username, String pass, Set<Empleado> empleados) {
		this.idUsuario = idUsuario;
		this.roles = roles;
		this.username = username;
		this.pass = pass;
		this.empleados = empleados;
	}

	@Id

	@Column(name = "id_usuario", unique = true, nullable = false)
	public int getIdUsuario() {
		return this.idUsuario;
	}

	public void setIdUsuario(int idUsuario) {
		this.idUsuario = idUsuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rol", nullable = false)
	public Roles getRoles() {
		return this.roles;
	}

	public void setRoles(Roles roles) {
		this.roles = roles;
	}

	@Column(name = "username", length = 25)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "pass", length = 50)
	public String getPass() {
		return this.pass;
	}

	public void setPass(String pass) {
		this.pass = pass;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuarios")
	public Set<Empleado> getEmpleados() {
		return this.empleados;
	}

	public void setEmpleados(Set<Empleado> empleados) {
		this.empleados = empleados;
	}

}
