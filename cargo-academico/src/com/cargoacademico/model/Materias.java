package com.cargoacademico.model;
// Generated 09-11-2019 08:19:20 AM by Hibernate Tools 5.1.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Materias generated by hbm2java
 */
@Entity
@Table(name = "materias", catalog = "cargo_academico", uniqueConstraints = @UniqueConstraint(columnNames = "codigo"))
public class Materias implements java.io.Serializable {

	private Integer idMateria;
	private Departamento departamento;
	private Materias materiasByCorequisito;
	private Materias materiasByPrerequisito;
	private Temario temario;
	private String materia;
	private String codigo;
	private int unidadValorativa;
	private Set<MateriaHorario> materiaHorarios = new HashSet<MateriaHorario>(0);
	private Set<Materias> materiasesForCorequisito = new HashSet<Materias>(0);
	private Set<Materias> materiasesForPrerequisito = new HashSet<Materias>(0);
	private Set<MateriaCarreraCiclo> materiaCarreraCiclos = new HashSet<MateriaCarreraCiclo>(0);

	public Materias() {
	}

	public Materias(Departamento departamento, Temario temario, int unidadValorativa) {
		this.departamento = departamento;
		this.temario = temario;
		this.unidadValorativa = unidadValorativa;
	}

	public Materias(Departamento departamento, Materias materiasByCorequisito, Materias materiasByPrerequisito,
			Temario temario, String materia, String codigo, int unidadValorativa, Set<MateriaHorario> materiaHorarios,
			Set<Materias> materiasesForCorequisito, Set<Materias> materiasesForPrerequisito,
			Set<MateriaCarreraCiclo> materiaCarreraCiclos) {
		this.departamento = departamento;
		this.materiasByCorequisito = materiasByCorequisito;
		this.materiasByPrerequisito = materiasByPrerequisito;
		this.temario = temario;
		this.materia = materia;
		this.codigo = codigo;
		this.unidadValorativa = unidadValorativa;
		this.materiaHorarios = materiaHorarios;
		this.materiasesForCorequisito = materiasesForCorequisito;
		this.materiasesForPrerequisito = materiasesForPrerequisito;
		this.materiaCarreraCiclos = materiaCarreraCiclos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_materia", unique = true, nullable = false)
	public Integer getIdMateria() {
		return this.idMateria;
	}

	public void setIdMateria(Integer idMateria) {
		this.idMateria = idMateria;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "departamento", nullable = false)
	public Departamento getDepartamento() {
		return this.departamento;
	}

	public void setDepartamento(Departamento departamento) {
		this.departamento = departamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "corequisito")
	public Materias getMateriasByCorequisito() {
		return this.materiasByCorequisito;
	}

	public void setMateriasByCorequisito(Materias materiasByCorequisito) {
		this.materiasByCorequisito = materiasByCorequisito;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "prerequisito")
	public Materias getMateriasByPrerequisito() {
		return this.materiasByPrerequisito;
	}

	public void setMateriasByPrerequisito(Materias materiasByPrerequisito) {
		this.materiasByPrerequisito = materiasByPrerequisito;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "temario", nullable = false)
	public Temario getTemario() {
		return this.temario;
	}

	public void setTemario(Temario temario) {
		this.temario = temario;
	}

	@Column(name = "materia", length = 175)
	public String getMateria() {
		return this.materia;
	}

	public void setMateria(String materia) {
		this.materia = materia;
	}

	@Column(name = "codigo", unique = true, length = 8)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "unidad_valorativa", nullable = false)
	public int getUnidadValorativa() {
		return this.unidadValorativa;
	}

	public void setUnidadValorativa(int unidadValorativa) {
		this.unidadValorativa = unidadValorativa;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "materias")
	public Set<MateriaHorario> getMateriaHorarios() {
		return this.materiaHorarios;
	}

	public void setMateriaHorarios(Set<MateriaHorario> materiaHorarios) {
		this.materiaHorarios = materiaHorarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "materiasByCorequisito")
	public Set<Materias> getMateriasesForCorequisito() {
		return this.materiasesForCorequisito;
	}

	public void setMateriasesForCorequisito(Set<Materias> materiasesForCorequisito) {
		this.materiasesForCorequisito = materiasesForCorequisito;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "materiasByPrerequisito")
	public Set<Materias> getMateriasesForPrerequisito() {
		return this.materiasesForPrerequisito;
	}

	public void setMateriasesForPrerequisito(Set<Materias> materiasesForPrerequisito) {
		this.materiasesForPrerequisito = materiasesForPrerequisito;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "materias")
	public Set<MateriaCarreraCiclo> getMateriaCarreraCiclos() {
		return this.materiaCarreraCiclos;
	}

	public void setMateriaCarreraCiclos(Set<MateriaCarreraCiclo> materiaCarreraCiclos) {
		this.materiaCarreraCiclos = materiaCarreraCiclos;
	}

}
